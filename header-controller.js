/**
 * Header Controller - Qu·∫£n l√Ω ch·ª©c nƒÉng ·∫©n/hi·ªán header
 * 
 * Script n√†y s·∫Ω t·ª± ƒë·ªông ·∫©n header sau 5 gi√¢y kh√¥ng ho·∫°t ƒë·ªông
 * v√† hi·ªÉn th·ªã l·∫°i khi ng∆∞·ªùi d√πng t∆∞∆°ng t√°c v·ªõi trang.
 */

document.addEventListener('DOMContentLoaded', function() {
    console.log('üîÑ Header Controller loaded');
    
    // C√°c ph·∫ßn t·ª≠ DOM
    const header = document.querySelector('header') || document.querySelector('.header');
    const body = document.body;
    let headerTimer;
    
    // T·∫°o c√°c ph·∫ßn t·ª≠ UI c·∫ßn thi·∫øt
    function createHeaderElements() {
        console.log('Creating header control elements');
        
        // T·∫°o v√πng k√≠ch ho·∫°t ·ªü tr√™n c√πng c·ªßa trang
        const triggerArea = document.createElement('div');
        triggerArea.className = 'header-trigger-area';
        document.body.appendChild(triggerArea);
        
        // T·∫°o tab hi·ªÉn th·ªã khi header b·ªã ·∫©n
        const headerTab = document.createElement('div');
        headerTab.className = 'header-tab';
        headerTab.textContent = 'Hi·ªÉn th·ªã Menu';
        document.body.appendChild(headerTab);
        
        // G√°n s·ª± ki·ªán cho c√°c ph·∫ßn t·ª≠
        triggerArea.addEventListener('mouseenter', showHeader);
        headerTab.addEventListener('click', showHeader);
        
        return { triggerArea, headerTab };
    }
    
    // C√°c ph·∫ßn t·ª≠ UI
    const { triggerArea, headerTab } = createHeaderElements();
    
    // ·∫®n header v√† hi·ªÉn th·ªã tab
    function hideHeader() {
        console.log('Hiding header');
        if (header) {
            header.classList.add('header-hidden');
            body.classList.add('header-is-hidden');
            
            // Hi·ªÉn th·ªã tab sau khi header ƒë√£ ·∫©n ho√†n to√†n
            setTimeout(() => {
                headerTab.classList.add('visible');
            }, 300);
        }
    }
    
    // Hi·ªÉn th·ªã header v√† ·∫©n tab
    function showHeader() {
        console.log('Showing header');
        if (header) {
            header.classList.remove('header-hidden');
            headerTab.classList.remove('visible');
            body.classList.remove('header-is-hidden');
            resetHeaderTimer();
        }
    }
    
    // Thi·∫øt l·∫≠p l·∫°i b·ªô ƒë·∫øm th·ªùi gian ·∫©n header
    function resetHeaderTimer() {
        clearTimeout(headerTimer);
        headerTimer = setTimeout(hideHeader, 5000); // 5 gi√¢y
    }
    
    // Ki·ªÉm tra n·∫øu trang ƒëang ·ªü ƒë·∫ßu trang
    function isAtPageTop() {
        return window.scrollY <= 20;
    }
    
    // Kh·ªüi t·∫°o s·ª± ki·ªán l·∫Øng nghe
    function initHeaderEvents() {
        if (!header) {
            console.warn('Header not found!');
            return;
        }
        
        console.log('Initializing header events');
        
        // Kh·ªüi t·∫°o b·ªô h·∫πn gi·ªù ·∫©n header ngay l·∫≠p t·ª©c
        resetHeaderTimer();
        
        // S·ª± ki·ªán cu·ªôn trang
        window.addEventListener('scroll', function() {
            // Hi·ªÉn th·ªã header khi cu·ªôn l√™n ƒë·∫ßu trang
            if (isAtPageTop()) {
                showHeader();
            } else {
                resetHeaderTimer();
            }
        });
        
        // S·ª± ki·ªán khi di chu·ªôt v√†o header
        header.addEventListener('mouseenter', function() {
            showHeader();
        });
        
        // S·ª± ki·ªán t∆∞∆°ng t√°c v·ªõi trang ƒë·ªÉ reset timer
        ['click', 'touchstart', 'mousemove', 'keydown'].forEach(eventType => {
            document.addEventListener(eventType, function() {
                if (!header.classList.contains('header-hidden')) {
                    resetHeaderTimer();
                }
            });
        });
    }
    
    // Bu·ªôc ·∫©n header sau 1 gi√¢y ƒë·ªÉ ƒë·∫£m b·∫£o n√≥ ho·∫°t ƒë·ªông
    function forceHideHeaderAfterDelay() {
        setTimeout(() => {
            console.log('Force hiding header');
            hideHeader();
        }, 1000);
    }
    
    // Kh·ªüi t·∫°o
    initHeaderEvents();
    forceHideHeaderAfterDelay();
    
    // Export c√°c h√†m ƒë·ªÉ c√≥ th·ªÉ s·ª≠ d·ª•ng ·ªü n∆°i kh√°c
    window.headerController = {
        hideHeader,
        showHeader,
        resetHeaderTimer
    };
}); 